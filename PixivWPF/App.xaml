<Application x:Class="PixivWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"	
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:mahs="http://metro.mahapps.com/winfx/xaml/shared"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:PixivWPF"
             xmlns:common="clr-namespace:PixivWPF.Common"
             StartupUri="MainWindow.xaml"
             Startup="Application_Startup" Exit="Application_Exit">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/Generic.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.FlatButton.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                <!-- NotificationUI -->
                <ResourceDictionary Source="/WPFNotification;component/Assets/NotificationUI.xaml"/>
                <!-- NotificationUI -> ToastUI -->
                <ResourceDictionary Source="pack://application:,,,/Common/ToastUI.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Do your override here -->
            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.StrokeOff" Color="{DynamicResource MahApps.Colors.Accent}" />
            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.StrokeOffPointerOver" Color="{DynamicResource MahApps.Colors.Accent}" />
            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.StrokeOffPressed" Color="{DynamicResource MahApps.Colors.Accent}" />
            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.KnobFillOff" Color="{DynamicResource MahApps.Colors.Accent}" />
            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.KnobFillOffPointerOver" Color="{DynamicResource MahApps.Colors.Accent}" />
            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.KnobFillOffPressed" Color="{DynamicResource MahApps.Colors.Accent}" />
            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.ContainerBackground" Color="Transparent" />
            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.ContainerBackgroundPointerOver" Color="Transparent" />
            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.ContainerBackgroundPressed" Color="Transparent" />
            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.ContainerBackgroundDisabled" Color="Transparent" />

            <ScaleTransform x:Key="FontStretchSemiCondensed" ScaleX="0.75" />
            <ScaleTransform x:Key="FontStretchCondensed" ScaleX="0.8" />
            <ScaleTransform x:Key="FontStretchExpanded" ScaleX="1.2" />

            <BooleanToVisibilityConverter x:Key="Bool2Vis"/>
            
            <DropShadowEffect x:Key="DropGlow" Color="{DynamicResource MahApps.Colors.IdealForeground}" ShadowDepth="0" Opacity="1" BlurRadius="5"/>
            <DropShadowEffect x:Key="DropMark" Color="{DynamicResource MahApps.Colors.Accent}" ShadowDepth="0" Opacity="1" BlurRadius="5"/>
            <BlurEffect x:Key="BlurGlow" Radius="9" RenderingBias="Quality" KernelType="Gaussian"/>
            <BlurEffect x:Key="BlurMark" Radius="5" RenderingBias="Quality" KernelType="Gaussian"/>
            
            <FontFamily x:Key="MonoSpaceFamily">
                霞骛文楷等宽, LXGW WenKai Mono, Sarasa Mono J, 等距更纱黑体 SC, FontAwesome, Iosevka, Consolas, Segoe UI Emoji, Segoe UI Symbol, Segoe MDL2 Assets, 更纱黑体 SC, Segoe UI, Monospace
            </FontFamily>
            <FontFamily x:Key="NormalFamily">
                霞骛文楷, LXGW WenKai, Sarasa Gothic J, 更纱黑体 SC, FontAwesome, Segoe UI Emoji, Segoe MDL2 Assets, Segoe UI Symbol, Segoe UI
            </FontFamily>
            <FontFamily x:Key="SegoeIconFamily">
                Segoe MDL2 Assets, Segoe UI Emoji, Segoe UI Symbol, 霞骛文楷, LXGW WenKai, Sarasa Gothic J, 更纱黑体 SC, FontAwesome, Segoe UI
            </FontFamily>
            <FontFamily x:Key="ExtraIconFamily">
                Segoe UI Emoji, Segoe UI Symbol, Segoe MDL2 Assets, 霞骛文楷, LXGW WenKai, Sarasa Gothic J, 更纱黑体 SC, FontAwesome, Segoe UI
            </FontFamily>
            <sys:Double x:Key="MonoSpaceFontSize">14</sys:Double>
            <sys:Double x:Key="NormalFontSize">14</sys:Double>
            <sys:Double x:Key="IconFontSize">14</sys:Double>

            <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                <Setter Property="FontFamily" Value="{DynamicResource MonoSpaceFamily}"/>
                <Setter Property="FontSize" Value="{DynamicResource MonoSpaceFontSize}"/>
                <Setter Property="MaxWidth" Value="1024"/>
                <Style.Resources>
                    <Style TargetType="ContentPresenter">
                        <Style.Resources>
                            <Style TargetType="TextBlock">
                                <!--<Setter Property="MaxLength" Value="500" />-->
                                <Setter Property="TextWrapping" Value="Wrap" />
                                <Setter Property="TextTrimming" Value="WordEllipsis" />
                            </Style>
                        </Style.Resources>
                    </Style>
                </Style.Resources>
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="{DynamicResource NormalFamily}"/>
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="FontFamily" Value="{DynamicResource NormalFamily}"/>
            </Style>
            <Style x:Key="SegoeIconStyle" TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="{DynamicResource SegoeIconFamily}"/>
            </Style>
            <Style x:Key="TextIcon" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
            </Style>
            <Style x:Key="TextContent" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}"/>
            </Style>

            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MahApps.Styles.Slider.Win10}"/>

            <Style x:Key="SlideValue" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
            </Style>
            
            <DataTemplate x:Key="TitleBarTemplate">
                <TextBlock Name="PART_Title"
                    Text="{TemplateBinding Content}"
                    VerticalAlignment="Center"
                    Margin="8,-1,1,0"
                    TextTrimming="CharacterEllipsis"
                    FontWeight="{TemplateBinding TextBlock.FontWeight}"
                    FontSize="16"
                    FontFamily="{DynamicResource NormalFamily}"/>
            </DataTemplate>
            <Style x:Key="MetroWindowStyle" TargetType="{x:Type mah:MetroWindow}">
                <Setter Property="TitleTemplate" Value="{DynamicResource TitleBarTemplate}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="GlowBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>
            <Style TargetType="{x:Type local:MainWindow}" BasedOn="{StaticResource MetroWindowStyle}"/>
            <Style TargetType="{x:Type common:ContentWindow}" BasedOn="{StaticResource MetroWindowStyle}"/>
            <Style TargetType="{x:Type common:PixivLoginDialog}" BasedOn="{StaticResource MetroWindowStyle}"/>

            <Style x:Key="CommandButtonIcon" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="{DynamicResource SegoeIconFamily}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Margin" Value="4,0,0,0"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="ExpanderButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
                <!--<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>-->
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width" Value="28"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0"/>
            </Style>
            <Style x:Key="ExpanderButtonIcon" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="{DynamicResource SegoeIconFamily}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            
            <Style x:Key="ButtonIcon" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="FontFamily" Value="{DynamicResource SegoeIconFamily}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style x:Key="ButtonIcon12" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="FontSize" Value="12"/>
            </Style>
            <Style x:Key="ButtonIcon14" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="FontSize" Value="14"/>
            </Style>
            <Style x:Key="ButtonIcon16" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="FontSize" Value="16"/>
            </Style>
            <Style x:Key="ButtonIcon18" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="FontSize" Value="18"/>
            </Style>
            <Style x:Key="ButtonIcon20" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="FontSize" Value="20"/>
            </Style>
            <Style x:Key="ButtonIcon22" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="FontSize" Value="22"/>
            </Style>
            <Style x:Key="ButtonIcon24" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="FontSize" Value="24"/>
            </Style>
            <Style x:Key="ButtonIcon26" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="FontSize" Value="26"/>
            </Style>
            <Style x:Key="ButtonIcon28" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="FontSize" Value="28"/>
            </Style>
            <Style x:Key="ButtonIcon32" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="FontSize" Value="32"/>
            </Style>

            <Style x:Key="MenuItemIcon" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="FontFamily" Value="{DynamicResource SegoeIconFamily}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Margin" Value="4,0,0,0"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="MenuItemExtraIcon" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuItemIcon}">
                <Setter Property="FontFamily" Value="{DynamicResource ExtraIconFamily}"/>
            </Style>
            <Style x:Key="MenuItemIcon10" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuItemIcon}">
                <Setter Property="FontSize" Value="10"/>
            </Style>
            <Style x:Key="MenuItemIcon12" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuItemIcon}">
                <Setter Property="FontSize" Value="12"/>
            </Style>
            <Style x:Key="MenuItemIcon14" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuItemIcon}">
                <Setter Property="FontSize" Value="14"/>
            </Style>
            <Style x:Key="MenuItemIcon16" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuItemIcon}">
                <Setter Property="FontSize" Value="16"/>
            </Style>
            <Style x:Key="MenuItemIcon18" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuItemIcon}">
                <Setter Property="FontSize" Value="18"/>
            </Style>
            <Style x:Key="MenuItemIcon20" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuItemIcon}">
                <Setter Property="FontSize" Value="20"/>
            </Style>
            <Style x:Key="MenuItemIcon22" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuItemIcon}">
                <Setter Property="FontSize" Value="22"/>
            </Style>
            <Style x:Key="MenuItemIcon24" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuItemIcon}">
                <Setter Property="FontSize" Value="24"/>
            </Style>
            <Style x:Key="MenuItemIcon32" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuItemIcon}">
                <Setter Property="FontSize" Value="32"/>
            </Style>
            <Style x:Key="MenuItemIcon48" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuItemIcon}">
                <Setter Property="FontSize" Value="48"/>
            </Style>

            <Style x:Key="{x:Type mah:HamburgerMenu}" TargetType="{x:Type mah:HamburgerMenu}">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
                <Setter Property="Background" Value="{DynamicResource MahApps.HamburgerMenu.Pane.Background}"/>
                <Setter Property="PaneForeground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
                <Setter Property="PaneBackground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
            </Style>
            <Style x:Key="HamburgerButton" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="{DynamicResource SegoeIconFamily}"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style x:Key="HamburgerItem" TargetType="{x:Type TextBlock}">
                <!--<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>-->
                <Setter Property="FontFamily" Value="{DynamicResource SegoeIconFamily}"/>
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="ToolButtonPanel" TargetType="{x:Type Rectangle}">
                <Setter Property="Opacity" Value="0.25"/>
                <Setter Property="Stroke" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Menu.Background}"/>
            </Style>
            <Style x:Key="ToolButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Width" Value="44"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style x:Key="ToolButtonIcon" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}"/>
                <Setter Property="FontFamily" Value="{DynamicResource SegoeIconFamily}"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontWeight" Value="Regular"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Effect" Value="{DynamicResource DropGlow}"/>
                <!--<Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForegroundBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SemiTransparent}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Transparent}"/>
                    </Trigger>                    
                </Style.Triggers>-->                
            </Style>
            <Style x:Key="ToolButtonIcon24" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ToolButtonIcon}">
                <Setter Property="FontSize" Value="24"/>
            </Style>
            <Style x:Key="ToolButtonIcon32" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ToolButtonIcon}">
                <Setter Property="FontSize" Value="32"/>
            </Style>
            <Style x:Key="ToolButtonIcon36" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ToolButtonIcon}">
                <Setter Property="FontSize" Value="36"/>
            </Style>
            
            <Style TargetType="{x:Type mah:Badged}">
                <Setter Property="FontFamily" Value="{DynamicResource MonoSpaceFamily}"/>
                <Setter Property="BadgeBackground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
            </Style>

            <Style TargetType="{x:Type iconPacks:PackIconModern}">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style x:Key="IdealPackIcon" TargetType="{x:Type iconPacks:PackIconModern}">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="CircleButton32" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForegroundBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SemiTransparent}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Transparent}"/>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style x:Key="CircleButton64" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource CircleButton32}">
                <Setter Property="Width" Value="64"/>
                <Setter Property="Height" Value="64"/>
            </Style>

            <Style x:Key="CircleButtonIcon" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}"/>
                <Setter Property="FontSize" Value="24"/>
            </Style>
            <Style x:Key="CircleButtonIcon32" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CircleButtonIcon}">
                <Setter Property="FontSize" Value="32"/>
            </Style>
            <Style x:Key="CircleButtonIcon64" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CircleButtonIcon}">
                <Setter Property="Margin" Value="0,0,0,0"/>
            </Style>

            <Style x:Key="CircleToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForegroundBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SemiTransparent}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Transparent}"/>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Width" Value="24"/>
                <Setter Property="Height" Value="24"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style x:Key="CircleToggleButton32" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource CircleToggleButton}">
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="32"/>
            </Style>
            <Style x:Key="CircleToggleButton48" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource CircleToggleButton}">
                <Setter Property="Width" Value="48"/>
                <Setter Property="Height" Value="48"/>
            </Style>
            <Style x:Key="CircleToggleButton64" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource CircleToggleButton}">
                <Setter Property="Width" Value="64"/>
                <Setter Property="Height" Value="64"/>
            </Style>

            <!--<Style x:Key="ProgressRingCloud" TargetType="{x:Type common:ProgressRingCloud}">-->
            <Style TargetType="{x:Type common:ProgressRingCloud}">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="ShadowColor" Value="{DynamicResource MahApps.Colors.IdealForeground}"/>
                <Setter Property="ShadowBlurRadius" Value="3"/>
                <Setter Property="ShadowDepth" Value="1"/>
                <Setter Property="ShadowOpacity" Value="1"/>
                <Setter Property="Opacity" Value="0.85"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
            
            <ControlTemplate x:Key="MenuItemWithSlider" TargetType="{x:Type MenuItem}">
                <Border x:Name="PART_SliderBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid x:Name="PART_SliderPanel" x:Uid="PART_SliderPanel" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Grid.Column="0" x:Name="PART_SliderIcon" x:Uid="PART_SliderIcon" Margin="4,0,6,0" MinWidth="17" VerticalAlignment="Center" ContentSource="Icon" />
                        <Grid Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter  Grid.Column="0" x:Name="PART_SliderLabel" x:Uid="PART_SliderLabel" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Header" />
                            <Slider Grid.Column="1" x:Name="PART_Slider" x:Uid="PART_Slider" MinWidth="96" MaxWidth="128" Margin="4,0"
                                HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                TickFrequency="1" TickPlacement="None" SmallChange="1" LargeChange="5" IsSnapToTickEnabled="True"
                                Minimum="50" Maximum="100" Value="65" 
                                Tag="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, NotifyOnTargetUpdated=True}"
                                TargetUpdated="MenuItemSlider_TargetUpdated"
                                ValueChanged="MenuItemSlider_ValueChanged" MouseWheel="MenuItemSlider_MouseWheel" >
                            </Slider>
                            <TextBlock Grid.Column="2" x:Name="PART_SliderValue" x:Uid="PART_SliderValue" Width="36" Margin="8,0,0,0"
                                HorizontalAlignment="Right" VerticalAlignment="Center" Text="85"/>
                        </Grid>
                        <ContentPresenter Grid.Column="2" x:Name="PART_SliderIGTHost" x:Uid="PART_SliderIGTHost" Margin="8,1,8,1" VerticalAlignment="Center" ContentSource="InputGestureText" />
                    </Grid>
                </Border>
            </ControlTemplate>

            <DataTemplate x:Key="MenuItemWithSliderHeader">
                <Grid x:Name="PART_SliderPanel" x:Uid="PART_HeaderPanel" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                        <ColumnDefinition Width="*"  SharedSizeGroup="MenuTextColumnGroup"/>
                        <ColumnDefinition Width="Auto"  SharedSizeGroup="MenuTextColumnGroup"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" x:Name="PART_SliderLabel" x:Uid="PART_SliderLabel" VerticalAlignment="Center" Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent} }" />
                    <Slider Grid.Column="1" x:Name="PART_Slider" x:Uid="PART_Slider" MinWidth="96" MaxWidth="128" Margin="4,0"
                        HorizontalAlignment="Stretch" VerticalAlignment="Center"
                        TickFrequency="1" TickPlacement="None" SmallChange="1" LargeChange="5" IsSnapToTickEnabled="True"
                        Minimum="50" Maximum="100" Value="85" ValueChanged="MenuItemSlider_ValueChanged" MouseWheel="MenuItemSlider_MouseWheel" >
                    </Slider>
                    <TextBlock Grid.Column="2" x:Name="PART_SliderValue" x:Uid="PART_SliderValue" Width="36" Margin="8,0,0,0"
                        HorizontalAlignment="Right" VerticalAlignment="Center" Text="85"/>
                </Grid>
            </DataTemplate>
            
        </ResourceDictionary>
    </Application.Resources>
</Application>
