<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GaussianBlur" xml:space="preserve">
    <value>Gaussian Blur</value>
  </data>
  <data name="MainWindow.Title" xml:space="preserve">
    <value>Image Compare</value>
  </data>
  <data name="Source.Text" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="Target.Text" xml:space="preserve">
    <value>Target</value>
  </data>
  <data name="CopyImageInfo" xml:space="preserve">
    <value>Copy Image Info</value>
  </data>
  <data name="ImageOpenSource.ToolTip" xml:space="preserve">
    <value>[F1] Open The Source Picture\n[Shift+F1] Load Prev Image File\n[Ctrl+F1] Load Next Image File</value>
  </data>
  <data name="ImageOpenTarget.ToolTip" xml:space="preserve">
    <value>[F2] Open The Target Picture\n[Shift+F2] Load Prev Image File\n[Ctrl+F2] Load Next Image File</value>
  </data>
  <data name="ImagePasteSource.ToolTip" xml:space="preserve">
    <value>[F3] Paste The Source Picture</value>
  </data>
  <data name="ImagePasteTarget.ToolTip" xml:space="preserve">
    <value>[F4] Paste The Target Picture</value>
  </data>
  <data name="ImageClear.ToolTip" xml:space="preserve">
    <value>Clear Source and Target Pictures</value>
  </data>
  <data name="UsedChannels.ToolTip" xml:space="preserve">
    <value>Picture Channels Selector</value>
  </data>
  <data name="ImageExchange.ToolTip" xml:space="preserve">
    <value>[F10] Exchange Source and Target</value>
  </data>
  <data name="ImageCompare.ToolTip" xml:space="preserve">
    <value>[F5] Compare Source and Target Picture\n[Shift+F5] Compare Mode Selector</value>
  </data>
  <data name="Compare.Text" xml:space="preserve">
    <value>Compare</value>
  </data>
  <data name="ImageCompose.ToolTip" xml:space="preserve">
    <value>[F6] Compose Source and Target Picture</value>
  </data>
  <data name="Compose.Text" xml:space="preserve">
    <value>Compose</value>
  </data>
  <data name="ProcessStatus.ToolTip" xml:space="preserve">
    <value>Picture Processing Progress</value>
  </data>
  <data name="ImageCopyResult.ToolTip" xml:space="preserve">
    <value>[F7] Copy Result Picture</value>
  </data>
  <data name="ImageSaveResult.ToolTip" xml:space="preserve">
    <value>[F8] Save Result Picture</value>
  </data>
  <data name="ZoomFitNone.ToolTip" xml:space="preserve">
    <value>[F9] Picture Fit None</value>
  </data>
  <data name="ZoomFitAll.ToolTip" xml:space="preserve">
    <value>[F9] Picture Fit All</value>
  </data>
  <data name="ZoomFitWidth.ToolTip" xml:space="preserve">
    <value>[F9] Picture Fit Width</value>
  </data>
  <data name="ZoomFitHeight.ToolTip" xml:space="preserve">
    <value>[F9] Picture Fit Height</value>
  </data>
  <data name="UseSmallerImage.ToolTip" xml:space="preserve">
    <value>Using Smaller Image for Compare and Compose After Image Loaded</value>
  </data>
  <data name="MaxCompareSizeValue.ToolTip" xml:space="preserve">
    <value>Max Image Width and Height Size When Using Smaller Image</value>
  </data>
  <data name="UseColorImage.ToolTip" xml:space="preserve">
    <value>Force Using Color Image for Compare and Compose After Image Loaded</value>
  </data>
  <data name="HighlightColorPick.ToolTip" xml:space="preserve">
    <value>Highlight Color</value>
  </data>
  <data name="LowlightColorPick.ToolTip" xml:space="preserve">
    <value>Lowlight Color</value>
  </data>
  <data name="MasklightColorPick.ToolTip" xml:space="preserve">
    <value>Masklight Color</value>
  </data>
  <data name="UseWeakBlur.ToolTip" xml:space="preserve">
    <value>Low or High Intensity Blur</value>
  </data>
  <data name="UseWeakSharp.ToolTip" xml:space="preserve">
    <value>Low or High Intensity Sharp</value>
  </data>
  <data name="UseWeakEffects.ToolTip" xml:space="preserve">
    <value>Low or High Intensity Effects</value>
  </data>
  <data name="FlipX.Header" xml:space="preserve">
    <value>Flip Horizontal</value>
  </data>
  <data name="FlipY.Header" xml:space="preserve">
    <value>Flip Vertical</value>
  </data>
  <data name="Rotate090.Header" xml:space="preserve">
    <value>Rotate +90</value>
  </data>
  <data name="Rotate180.Header" xml:space="preserve">
    <value>Rotate 180</value>
  </data>
  <data name="Rotate270.Header" xml:space="preserve">
    <value>Rotate -90</value>
  </data>
  <data name="ResetTransforms.Header" xml:space="preserve">
    <value>Reset Transforms</value>
  </data>
  <data name="Grayscale.Header" xml:space="preserve">
    <value>Grayscale</value>
  </data>
  <data name="GaussianBlur.Header" xml:space="preserve">
    <value>Gaussian Blur</value>
  </data>
  <data name="UsmSharp.Header" xml:space="preserve">
    <value>Unsharp Mask</value>
  </data>
  <data name="MoreEffects.Header" xml:space="preserve">
    <value>More Effects</value>
  </data>
  <data name="CropBoundingBox.Header" xml:space="preserve">
    <value>Crop BoundingBox</value>
  </data>
  <data name="MathcSourceSize.Header" xml:space="preserve">
    <value>Match Source Size</value>
  </data>
  <data name="MathcTargetSize.Header" xml:space="preserve">
    <value>Match Target Size</value>
  </data>
  <data name="SlicingX.Header" xml:space="preserve">
    <value>Slicing Horizontal</value>
  </data>
  <data name="SlicingY.Header" xml:space="preserve">
    <value>Slicing Vertical</value>
  </data>
  <data name="ReloadImage.Header" xml:space="preserve">
    <value>Reload Image</value>
  </data>
  <data name="CopyImageInfo.Header" xml:space="preserve">
    <value>Copy Image Info</value>
  </data>
  <data name="SaveAs.Header" xml:space="preserve">
    <value>Save Image As ...</value>
  </data>
  <data name="OilPaint.Header" xml:space="preserve">
    <value>Oil Paint</value>
  </data>
  <data name="Charcoal.Header" xml:space="preserve">
    <value>Charcoal</value>
  </data>
  <data name="MeanShift.Header" xml:space="preserve">
    <value>Mean Shift Cluster</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="AllSupportedImageFiles" xml:space="preserve">
    <value>All Supported Image Files</value>
  </data>
  <data name="ResultTipMode" xml:space="preserve">
    <value>Mode       :</value>
  </data>
  <data name="ResultTipDifference" xml:space="preserve">
    <value>Difference :</value>
  </data>
  <data name="ResultTipElapsed" xml:space="preserve">
    <value>Elapsed    :</value>
  </data>
  <data name="InfoTipDimention" xml:space="preserve">
    <value>Dimention      =</value>
  </data>
  <data name="InfoTipResolution" xml:space="preserve">
    <value>Resolution     =</value>
  </data>
  <data name="InfoTipAttributes" xml:space="preserve">
    <value>Attributes</value>
  </data>
  <data name="InfoTipColorSpace" xml:space="preserve">
    <value>Color Space    =</value>
  </data>
  <data name="InfoTipFormatInfo" xml:space="preserve">
    <value>Format Info    =</value>
  </data>
  <data name="InfoTipMemoryUsage" xml:space="preserve">
    <value>Memory Usage   =</value>
  </data>
  <data name="InfoTipDisplayMemory" xml:space="preserve">
    <value>Display Memory =</value>
  </data>
  <data name="InfoTipFileName" xml:space="preserve">
    <value>FileName       =</value>
  </data>
  <data name="HighlightColorPick.AdvancedTabHeader" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="HighlightColorPick.StandardTabHeader" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="HighlightColorPick.AvailableColorsHeader" xml:space="preserve">
    <value>Available Colors</value>
  </data>
  <data name="HighlightColorPick.StandardColorsHeader" xml:space="preserve">
    <value>Standard Colors</value>
  </data>
  <data name="HighlightColorPick.RecentColorsHeader" xml:space="preserve">
    <value>Recent Colors</value>
  </data>
  <data name="LowlightColorPick.AdvancedTabHeader" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="LowlightColorPick.StandardTabHeader" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="LowlightColorPick.AvailableColorsHeader" xml:space="preserve">
    <value>Available Colors</value>
  </data>
  <data name="LowlightColorPick.StandardColorsHeader" xml:space="preserve">
    <value>Standard Colors</value>
  </data>
  <data name="LowlightColorPick.RecentColorsHeader" xml:space="preserve">
    <value>Recent Colors</value>
  </data>
  <data name="MasklightColorPick.AdvancedTabHeader" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="MasklightColorPick.StandardTabHeader" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="MasklightColorPick.AvailableColorsHeader" xml:space="preserve">
    <value>Available Colors</value>
  </data>
  <data name="MasklightColorPick.StandardColorsHeader" xml:space="preserve">
    <value>Standard Colors</value>
  </data>
  <data name="MasklightColorPick.RecentColorsHeader" xml:space="preserve">
    <value>Recent Colors</value>
  </data>
  <data name="UILanguage.ToolTip" xml:space="preserve">
    <value>UI Language Selector</value>
  </data>
  <data name="UILanguageEn.Header" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="UILanguageCn.Header" xml:space="preserve">
    <value>简体中文</value>
  </data>
  <data name="UILanguageTw.Header" xml:space="preserve">
    <value>繁體中文</value>
  </data>
  <data name="UILanguageJa.Header" xml:space="preserve">
    <value>日本語</value>
  </data>
  <data name="FillBoundingBox.Header" xml:space="preserve">
    <value>Fill BoundingBox</value>
  </data>
  <data name="InfoTipBounding" xml:space="preserve">
    <value>Bounding Box   =</value>
  </data>
  <data name="AutoLevel.Header" xml:space="preserve">
    <value>Auto Levels</value>
  </data>
  <data name="AutoGamma.Header" xml:space="preserve">
    <value>Auto Gamma</value>
  </data>
  <data name="AutoThreshold.Header" xml:space="preserve">
    <value>Auto Threshold</value>
  </data>
  <data name="BlueShift.Header" xml:space="preserve">
    <value>Blue Shift (Moonlight Night)</value>
  </data>
  <data name="AutoContrast.Header" xml:space="preserve">
    <value>Auto Contrast</value>
  </data>
  <data name="AutoEnhance.Header" xml:space="preserve">
    <value>Auto Enhance</value>
  </data>
  <data name="AutoEqualize.Header" xml:space="preserve">
    <value>Auto Equalize</value>
  </data>
  <data name="HaldClut.Header" xml:space="preserve">
    <value>Apply Hald CLUT</value>
  </data>
  <data name="KmeansCluster.Header" xml:space="preserve">
    <value>K-Means Cluster</value>
  </data>
  <data name="ReMapColor.Header" xml:space="preserve">
    <value>Re-Map Color</value>
  </data>
  <data name="InfoTipColors" xml:space="preserve">
    <value>Colors         =</value>
  </data>
  <data name="Waiting" xml:space="preserve">
    <value>Waiting ...</value>
  </data>
  <data name="AutoVignette.Header" xml:space="preserve">
    <value>Auto Vignette</value>
  </data>
  <data name="AutoWhiteBalance.Header" xml:space="preserve">
    <value>Auto White Balance</value>
  </data>
  <data name="CopyToSource.Header" xml:space="preserve">
    <value>Copy Image To Source</value>
  </data>
  <data name="CopyToTarget.Header" xml:space="preserve">
    <value>Copy Image To Target</value>
  </data>
  <data name="LoadPrevImageFile.Header" xml:space="preserve">
    <value>Load Prev Image File</value>
  </data>
  <data name="LoadNextImageFile.Header" xml:space="preserve">
    <value>Load Next Image File</value>
  </data>
</root>